# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import HW2_pb2 as HW2__pb2


class Homework2Stub(object):
    """option java_multiple_files = true;
    option java_package = "io.grpc.examples.helloworld";
    option java_outer_classname = "HelloWorldProto";
    option objc_class_prefix = "HLW";

    package helloworld;

    The greeting service definition.
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.SellerCreate = channel.unary_unary(
                '/Homework2/SellerCreate',
                request_serializer=HW2__pb2.CreateRequest.SerializeToString,
                response_deserializer=HW2__pb2.CreateReply.FromString,
                )
        self.SellerLogin = channel.unary_unary(
                '/Homework2/SellerLogin',
                request_serializer=HW2__pb2.LoginRequest.SerializeToString,
                response_deserializer=HW2__pb2.LoginReply.FromString,
                )
        self.SellerLogout = channel.unary_unary(
                '/Homework2/SellerLogout',
                request_serializer=HW2__pb2.LogoutRequest.SerializeToString,
                response_deserializer=HW2__pb2.LogoutReply.FromString,
                )


class Homework2Servicer(object):
    """option java_multiple_files = true;
    option java_package = "io.grpc.examples.helloworld";
    option java_outer_classname = "HelloWorldProto";
    option objc_class_prefix = "HLW";

    package helloworld;

    The greeting service definition.
    """

    def SellerCreate(self, request, context):
        """Create Seller Account Using Seller Name (not unique) and password
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SellerLogin(self, request, context):
        """Seller Login, with Seller ID and password
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SellerLogout(self, request, context):
        """Seller Logout, with Seller ID and password
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_Homework2Servicer_to_server(servicer, server):
    rpc_method_handlers = {
            'SellerCreate': grpc.unary_unary_rpc_method_handler(
                    servicer.SellerCreate,
                    request_deserializer=HW2__pb2.CreateRequest.FromString,
                    response_serializer=HW2__pb2.CreateReply.SerializeToString,
            ),
            'SellerLogin': grpc.unary_unary_rpc_method_handler(
                    servicer.SellerLogin,
                    request_deserializer=HW2__pb2.LoginRequest.FromString,
                    response_serializer=HW2__pb2.LoginReply.SerializeToString,
            ),
            'SellerLogout': grpc.unary_unary_rpc_method_handler(
                    servicer.SellerLogout,
                    request_deserializer=HW2__pb2.LogoutRequest.FromString,
                    response_serializer=HW2__pb2.LogoutReply.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'Homework2', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Homework2(object):
    """option java_multiple_files = true;
    option java_package = "io.grpc.examples.helloworld";
    option java_outer_classname = "HelloWorldProto";
    option objc_class_prefix = "HLW";

    package helloworld;

    The greeting service definition.
    """

    @staticmethod
    def SellerCreate(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Homework2/SellerCreate',
            HW2__pb2.CreateRequest.SerializeToString,
            HW2__pb2.CreateReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SellerLogin(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Homework2/SellerLogin',
            HW2__pb2.LoginRequest.SerializeToString,
            HW2__pb2.LoginReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SellerLogout(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Homework2/SellerLogout',
            HW2__pb2.LogoutRequest.SerializeToString,
            HW2__pb2.LogoutReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
